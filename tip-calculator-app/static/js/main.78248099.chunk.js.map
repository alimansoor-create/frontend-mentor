{"version":3,"sources":["images/logo.svg","images/icon-dollar.svg","images/icon-person.svg","components/Input/Input.js","components/Option/Option.js","components/CustomOption/CustomOption.js","components/Selector/Selector.js","components/CalculatorForm/CalculatorForm.js","components/Output/Output.js","components/CalculatorOutput/CalculatorOutput.js","components/Calculator/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["Input","props","handleChange","bind","evt","this","value","min","className","label","htmlFor","name","icon","src","alt","checkValidity","type","id","max","step","placeholder","onChange","Component","Option","checked","CustomOption","onFocus","handleFocus","onBlur","handleBlur","Selector","state","isEditing","handleCustomInputChange","target","options","map","optn","some","setState","CalculatorForm","iconDollar","bill","handleInputChange","tipPercent","handleSelectorChange","customField","iconPerson","nPeople","Output","unit","CalculatorOutput","tipAmount","total","onClick","resetCalculator","disabled","isCalculatorEmpty","Calculator","Number","toFixed","handleFormInput","isFinite","App","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78248099.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3cc0528b.svg\";","export default __webpack_public_path__ + \"static/media/icon-dollar.9f9be353.svg\";","export default __webpack_public_path__ + \"static/media/icon-person.65bfd204.svg\";","import React, { Component } from \"react\";\r\nimport \"./Input.scss\";\r\n\r\n/** Renders an Input component, consisting of:\r\n * - an input label\r\n * - an input icon/symbol\r\n * - an input form element\r\n * - an error message that shows for a specific class (\".Input__field--error\")\r\n */\r\nexport default class Input extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(evt) {\r\n    this.props.handleChange(evt);\r\n  }\r\n\r\n  checkValidity() {\r\n    return this.props.value < this.props.min;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Input\">\r\n        {this.props.label && (\r\n          <label className=\"Input__label\" htmlFor={this.props.name}>\r\n            {this.props.label}\r\n          </label>\r\n        )}\r\n\r\n        <label className=\"Input__field-wrapper\">\r\n          {this.props.icon && (\r\n            <img className=\"Input__icon\" src={this.props.icon} alt=\"\" />\r\n          )}\r\n          <input\r\n            className={`Input__field${\r\n              this.checkValidity() ? \" Input__field--error\" : \"\"\r\n            }`}\r\n            type={this.props.type}\r\n            name={this.props.name}\r\n            id={this.props.name}\r\n            min={this.props.min}\r\n            max={this.props.max}\r\n            step={this.props.step}\r\n            placeholder={this.props.placeholder}\r\n            // Display the value if its not 0\r\n            value={this.props.value ? this.props.value : \"\"}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        {/* Conditionally show error message */}\r\n        {this.checkValidity() && (\r\n          <div className=\"Input__error-msg\">Invalid input</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Option.scss\";\r\n\r\nexport default class Option extends Component {\r\n  render() {\r\n    return (\r\n      <label className=\"Option\">\r\n        <input\r\n          type=\"radio\"\r\n          name={this.props.name}\r\n          value={this.props.value}\r\n          onChange={this.props.handleChange}\r\n          className=\"Option__radio\"\r\n          checked={this.props.checked}\r\n        />\r\n        <span className=\"Option__content\">{this.props.label}</span>\r\n      </label>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./CustomOption.scss\";\r\n\r\nexport default class CustomOption extends Component {\r\n  render() {\r\n    return (\r\n      <input\r\n        className=\"CustomOption\"\r\n        type=\"number\"\r\n        name={this.props.name}\r\n        value={this.props.value ? this.props.value : \"\"}\r\n        placeholder={this.props.placeholder}\r\n        onChange={this.props.handleChange}\r\n        onFocus={this.props.handleFocus}\r\n        onBlur={this.props.handleBlur}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Selector.scss\";\r\n\r\nimport Option from \"../Option/Option\";\r\nimport CustomOption from \"../CustomOption/CustomOption\";\r\n\r\n/** Renders a list of Option components with preset values, and a CustomOption component for custom input.\r\n */\r\nexport default class Selector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // state.isEditing is set to true when the CustomInput is in focus, preventing the other Options from being selected while the input is being edited.\r\n      isEditing: false,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleCustomInputChange = this.handleCustomInputChange.bind(this);\r\n  }\r\n\r\n  handleChange(evt) {\r\n    this.props.handleChange(evt);\r\n  }\r\n\r\n  handleCustomInputChange(evt) {\r\n    evt.target.value /= 100;\r\n    this.props.handleChange(evt);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Selector\">\r\n        <label className=\"Selector__label\">{this.props.label}</label>\r\n        <div className=\"Selector__grid\">\r\n          {this.props.options.map((optn) => (\r\n            <Option\r\n              name={this.props.name}\r\n              value={optn.value}\r\n              label={optn.label}\r\n              checked={\r\n                !this.state.isEditing ? this.props.value === optn.value : false\r\n              }\r\n              handleChange={this.handleChange}\r\n              key={optn.label}\r\n            />\r\n          ))}\r\n          <CustomOption\r\n            name={this.props.name}\r\n            // I do not know what I wrote here, and I won't attempt explaining\r\n            value={\r\n              !this.props.options.some((optn) =>\r\n                !this.state.isEditing ? this.props.value === optn.value : false\r\n              )\r\n                ? this.props.value * 100\r\n                : \"\"\r\n            }\r\n            placeholder=\"Custom\"\r\n            handleChange={this.handleCustomInputChange}\r\n            handleFocus={() => this.setState({ isEditing: true })}\r\n            handleBlur={() => this.setState({ isEditing: false })}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./CalculatorForm.scss\";\r\nimport iconDollar from \"../../images/icon-dollar.svg\";\r\nimport iconPerson from \"../../images/icon-person.svg\";\r\n\r\nimport Input from \"../Input/Input\";\r\nimport Selector from \"../Selector/Selector\";\r\n\r\n/** Gathers data from form inputs and passes it to the Calculator component */\r\nexport default class CalculatorForm extends Component {\r\n  render() {\r\n    return (\r\n      <form className=\"CalculatorForm\">\r\n        <Input\r\n          type=\"number\"\r\n          name=\"bill\"\r\n          label=\"Bill\"\r\n          icon={iconDollar}\r\n          min={0.0}\r\n          step={0.01}\r\n          placeholder=\"0\"\r\n          value={this.props.bill}\r\n          handleChange={this.props.handleInputChange}\r\n        />\r\n        <Selector\r\n          name=\"tipPercent\"\r\n          label=\"Select Tip %\"\r\n          options={[\r\n            { label: \"5%\", value: 0.05 },\r\n            { label: \"10%\", value: 0.1 },\r\n            { label: \"15%\", value: 0.15 },\r\n            { label: \"25%\", value: 0.25 },\r\n            { label: \"50%\", value: 0.5 },\r\n          ]}\r\n          value={this.props.tipPercent}\r\n          handleChange={this.props.handleSelectorChange}\r\n          customField\r\n        />\r\n        <Input\r\n          type=\"number\"\r\n          name=\"nPeople\"\r\n          label=\"Number of People\"\r\n          icon={iconPerson}\r\n          min={0}\r\n          step={1}\r\n          placeholder=\"0\"\r\n          value={this.props.nPeople}\r\n          handleChange={this.props.handleInputChange}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Output.scss\";\r\n\r\nexport default class Output extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Output\">\r\n        <div>\r\n          <p className=\"Output__label\">{this.props.label}</p>\r\n          <p className=\"Output__unit\">{this.props.unit}</p>\r\n        </div>\r\n        <strong className=\"Output__value\">${this.props.value}</strong>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./CalculatorOutput.scss\";\r\n\r\nimport Output from \"../Output/Output\";\r\n\r\nexport default class CalculatorOutput extends Component {\r\n  render() {\r\n    return (\r\n      <output className=\"CalculatorOutput\">\r\n        <Output\r\n          label=\"Tip Amount\"\r\n          unit=\"/ person\"\r\n          value={this.props.tipAmount ? this.props.tipAmount : \"0.00\"}\r\n        />\r\n        <Output\r\n          label=\"Total\"\r\n          unit=\"/ person\"\r\n          value={this.props.total ? this.props.total : \"0.00\"}\r\n        />\r\n        <button\r\n          className=\"CalculatorOutput__reset\"\r\n          onClick={this.props.resetCalculator}\r\n          disabled={this.props.isCalculatorEmpty()}\r\n        >\r\n          RESET\r\n        </button>\r\n      </output>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Calculator.scss\";\r\n\r\nimport CalculatorForm from \"../CalculatorForm/CalculatorForm\";\r\nimport CalculatorOutput from \"../CalculatorOutput/CalculatorOutput\";\r\n\r\nexport default class Calculator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Setting state for form inputs\r\n    this.state = {\r\n      bill: 0,\r\n      tipPercent: 0,\r\n      nPeople: 0,\r\n    };\r\n    // Event-handler bindings\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSelectorChange = this.handleSelectorChange.bind(this);\r\n    // Reset functions binding\r\n    this.isCalculatorEmpty = this.isCalculatorEmpty.bind(this);\r\n    this.resetCalculator = this.resetCalculator.bind(this);\r\n  }\r\n\r\n  /** Updates state when text inputs are changed */\r\n  handleInputChange(evt) {\r\n    this.setState({\r\n      [evt.target.name]: Number(evt.target.value),\r\n    });\r\n  }\r\n\r\n  /** Updates state when selector input is changed */\r\n  handleSelectorChange(evt) {\r\n    this.setState({\r\n      [evt.target.name]: Number(evt.target.value),\r\n    });\r\n  }\r\n\r\n  /** Returns true if calculator is empty */\r\n  isCalculatorEmpty() {\r\n    const { bill, tipPercent, nPeople } = this.state;\r\n    return bill === 0 && tipPercent === 0 && nPeople === 0;\r\n  }\r\n\r\n  /** Empties all the form inputs */\r\n  resetCalculator() {\r\n    this.setState({ bill: 0, tipPercent: 0, nPeople: 0 });\r\n  }\r\n\r\n  render() {\r\n    // Calculate tip amount per person from state\r\n    let tipAmount = Number(\r\n      ((this.state.bill * this.state.tipPercent) / this.state.nPeople).toFixed(\r\n        2\r\n      )\r\n    );\r\n\r\n    // Calculate total per person from state\r\n    let total = Number(\r\n      (this.state.bill / this.state.nPeople + tipAmount).toFixed(2)\r\n    );\r\n\r\n    return (\r\n      <main className=\"Calculator\">\r\n        <CalculatorForm\r\n          handleFormInput={this.handleFormInput}\r\n          handleInputChange={this.handleInputChange}\r\n          handleSelectorChange={this.handleSelectorChange}\r\n          bill={this.state.bill}\r\n          tipPercent={this.state.tipPercent}\r\n          nPeople={this.state.nPeople}\r\n        />\r\n        <CalculatorOutput\r\n          tipAmount={isFinite(tipAmount) ? tipAmount : \"0.00\"}\r\n          total={isFinite(total) ? total : \"0.00\"}\r\n          resetCalculator={this.resetCalculator}\r\n          isCalculatorEmpty={this.isCalculatorEmpty}\r\n        />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","import \"./styles/App.scss\";\nimport logo from \"./images/logo.svg\";\n\nimport Calculator from \"./components/Calculator/Calculator\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <img\n        src={logo}\n        className=\"App__logo\"\n        alt=\"'Splitter' tip calculator logo\"\n      />\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}